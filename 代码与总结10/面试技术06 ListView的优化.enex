<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export2.dtd">
<en-export export-date="20150914T082809Z" application="Evernote/Windows" version="5.x">
<note><title>面试技术06: ListView的优化</title><content><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd">

<en-note style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space;"><div><b>0. 第0层: 不优化:</b></div><div>&nbsp; &nbsp; &nbsp;每次执行getView(), 都会执行:&nbsp;&nbsp;converterView = View.inflate(R.layout.xxx);</div><div>&nbsp; &nbsp; &nbsp;问题: 效率太低, 在快速滑动时会有卡顿, 在数据很多时甚至会内存溢出</div><div><hr/></div><b>1. 第一层: 复用converterView</b><div>&nbsp; &nbsp; &nbsp;if(converterView==null) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; converterView = View.inflate(R.layout.xxx); &nbsp;//n+1</div><div>&nbsp; &nbsp; &nbsp;}</div><div>&nbsp; &nbsp; &nbsp;</div><div>&nbsp; &nbsp; &nbsp;问题: 每次执行getView()都需要执行converterView.findViewById()得到子View &nbsp; ImageView</div><div><hr/></div><div><b>2. 第二层: 使用ViewHolder, 减少findViewById()的次数</b></div><div>&nbsp; &nbsp; &nbsp;Viewholder holder = null;</div><div>&nbsp; &nbsp; &nbsp;if(converterView==null) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; converterView = View.inflate(R.layout.xxx);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;holder = new ViewHolder();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;holder.imageView = (ImageView)converterView.findViewById(xxx);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; holder.textView = (TextView)converterView.findViewById(yyy);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; converterView.setTag(holder);</div><div>&nbsp; &nbsp; &nbsp;} else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; holder = (Viewholder&nbsp;)converterView.getTag();</div><div>&nbsp; &nbsp; &nbsp;}</div><div><br/></div><div>&nbsp; &nbsp; &nbsp;Person p = data.get(position);</div><div>&nbsp; &nbsp; &nbsp;holder.imageView.setimage(p.getIcon())</div><div>&nbsp; &nbsp; &nbsp;holder.textView.setText(p.getName())</div><div><br/></div><div>&nbsp; &nbsp; &nbsp;static class ViewHolder {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ImageView imageView;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; TextView textView;</div><div>&nbsp; &nbsp; &nbsp;}</div><div>&nbsp; &nbsp; &nbsp;</div><div>&nbsp; &nbsp; &nbsp;//json: [{}, {}]</div><div>&nbsp; &nbsp; &nbsp;问题1: 对于联网获取列表数据, 如果数据量太大(比如超过100000条甚至更多), 一次获取出来显示, 太慢太耗流量: 第四层优化</div><div>&nbsp; &nbsp; &nbsp;问题2:&nbsp;对于联网获取列表数据, 如果包含图片数据, 每次都请求获取显示,&nbsp;太慢太耗流量: 第三层优化</div><div><hr/></div><div><b>3. 第三层优化: 图片三级缓存处理</b></div><div>&nbsp; &nbsp; &nbsp;参见<b>图片三级缓存机制</b></div><div><hr/></div><div><b>4. 第四层: 对数据列表进行分页加载显示</b></div><div>&nbsp; &nbsp; &nbsp;1). 自己做: 通过Scroll监听listView.setonScrollListener(scrollListener), 当到达底部时加载下一页列表数据并显示</div><div>&nbsp; &nbsp; &nbsp;2). 使用第三方开源框架: Android-PullToRefresh或其它</div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div><div><br/></div></en-note>]]></content><created>20150416T123620Z</created><updated>20150914T080731Z</updated><tag>面试技术</tag></note></en-export>
